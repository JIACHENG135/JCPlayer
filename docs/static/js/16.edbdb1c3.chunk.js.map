{"version":3,"sources":["shared/functions/countWithEmojis.js","shared/components/EmojiTextArea.js","shared/functions/toArray.js"],"names":["countWithEmojis","str","toArray","length","emojisToShowFilter","emoji","unified","withStyles","theme","typography","body1","display","border","marginTop","spacing","paddingRight","paddingLeft","paddingBottom","top","right","fontSize","height","floatButtonWrapper","position","bottom","floatButtonSVG","color","palette","primary","light","relative","withTheme","props","classes","rightContent","placeholder","maxCharacters","emojiSet","inputClassName","onChange","useState","open","setOpen","value","setValue","characters","setCharacters","onSelectEmoji","useCallback","_characters","_value","native","handleTextFieldChange","event","target","toggleOpen","Grid","container","item","xs","sm","lg","className","TextField","fullWidth","multiline","variant","rows","onInput","InputProps","notchedOutline","IconButton","onClick","FormHelperText","error","Collapse","in","Box","mt","set","main","style","width","onSelect","mapTag","setTag","reIsHostCtor","reIsUint","rsAstral","rsCombo","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsOptVar","rsSeq","join","rsSymbol","reUnicode","RegExp","reHasUnicode","root","global","Object","Function","baseValues","object","array","iteratee","index","result","Array","arrayMap","key","mapToArray","map","size","forEach","setToArray","stringToArray","string","test","hasUnicode","match","unicodeToArray","split","asciiToArray","func","transform","funcProto","prototype","objectProto","coreJsData","maskSrcKey","uid","exec","keys","IE_PROTO","funcToString","toString","hasOwnProperty","objectToString","reIsNative","call","replace","Symbol","iteratorSymbol","iterator","undefined","propertyIsEnumerable","nativeKeys","arg","DataView","getNative","Map","Promise","Set","WeakMap","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","arrayLikeKeys","inherited","isArray","isObjectLike","isArrayLike","isArrayLikeObject","isArguments","n","baseTimes","String","skipIndexes","isIndex","push","baseIsNative","isObject","isMasked","isFunction","e","isHostObject","baseKeys","Ctor","constructor","proto","isPrototype","getValue","getTag","ArrayBuffer","resolve","ctorString","isLength","tag","type","values","module","exports","isString","source","copyArray","data","next","done","iteratorToArray"],"mappings":"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","file":"static/js/16.edbdb1c3.chunk.js","sourcesContent":["import toArray from \"./toArray\";\n\n/**\n * Counts the characters in a string and counts emojis correctly.\n *\n * @param {string} str The string to count characters from.\n * @return {number} The number of characters in the string.\n */\nfunction countWithEmojis(str) {\n  return toArray(str).length;\n}\n\nexport default countWithEmojis;\n","import React, { Fragment, useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\nimport {\n  TextField,\n  IconButton,\n  Collapse,\n  FormHelperText,\n  Box,\n  Grid,\n  withStyles\n} from \"@material-ui/core\";\nimport EmojiEmotionsIcon from \"@material-ui/icons/EmojiEmotions\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport countWithEmojis from \"../functions/countWithEmojis\";\n\nconst styles = theme => ({\n  \"@global\": {\n    \".emoji-mart-category-label\": theme.typography.body1,\n    \".emoji-mart-bar\": { display: \"none !important\" },\n    \".emoji-mart-search input\": {\n      ...theme.typography.body1,\n      ...theme.border\n    },\n    \".emoji-mart-search\": {\n      marginTop: `${theme.spacing(1)}px !important`,\n      paddingRight: `${theme.spacing(1)}px !important`,\n      paddingLeft: `${theme.spacing(1)}px !important`,\n      paddingBottom: `${theme.spacing(1)}px !important`\n    },\n    \".emoji-mart-search-icon\": {\n      top: \"5px !important\",\n      right: \"14px !important\",\n      fontSize: 20\n    },\n    \".emoji-mart-scroll\": {\n      height: 240\n    },\n    \".emoji-mart\": {\n      ...theme.border\n    }\n  },\n  floatButtonWrapper: {\n    position: \"absolute\",\n    bottom: 12,\n    right: 12\n  },\n  floatButtonSVG: {\n    color: theme.palette.primary.light\n  },\n  relative: {\n    position: \"relative\"\n  }\n});\n\n/**\n * Emojis whose unified is greater than 5 sometimes\n * are not displayed correcty in the browser.\n * We won't display them.\n */\nconst emojisToShowFilter = emoji => {\n  if (emoji.unified.length > 5) {\n    return false;\n  }\n  return true;\n};\n\nfunction EmojiTextarea(props) {\n  const {\n    theme,\n    classes,\n    rightContent,\n    placeholder,\n    maxCharacters,\n    emojiSet,\n    inputClassName,\n    onChange\n  } = props;\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const [characters, setCharacters] = useState(0);\n\n  const onSelectEmoji = useCallback(\n    emoji => {\n      let _characters;\n      let _value = value + emoji.native;\n      if (maxCharacters) {\n        _characters = countWithEmojis(_value);\n        if (_characters > maxCharacters) {\n          return;\n        }\n      }\n      if (onChange) {\n        onChange(_value, _characters);\n      }\n      setValue(_value);\n      setCharacters(_characters);\n    },\n    [value, setValue, setCharacters, maxCharacters, onChange]\n  );\n\n  const handleTextFieldChange = useCallback(\n    event => {\n      const { target } = event;\n      const { value } = target;\n      let characters;\n      if (maxCharacters) {\n        characters = countWithEmojis(value);\n        if (characters > maxCharacters) {\n          return;\n        }\n      }\n      if (onChange) {\n        onChange(value, characters);\n      }\n      setValue(value);\n      setCharacters(characters);\n    },\n    [maxCharacters, onChange, setValue, setCharacters]\n  );\n\n  const toggleOpen = useCallback(() => {\n    setOpen(!open);\n  }, [open, setOpen]);\n\n  return (\n    <Fragment>\n      <Grid spacing={0} container>\n        <Grid\n          item\n          xs={rightContent ? 8 : 12}\n          sm={rightContent ? 9 : 12}\n          lg={rightContent ? 10 : 12}\n          className={classes.relative}\n        >\n          <TextField\n            fullWidth\n            multiline\n            variant=\"outlined\"\n            rows={6}\n            onInput={handleTextFieldChange}\n            value={value}\n            placeholder={placeholder}\n            InputProps={{\n              classes: {\n                notchedOutline: inputClassName ? inputClassName : null\n              }\n            }}\n          />\n          <div className={classes.floatButtonWrapper}>\n            <IconButton onClick={toggleOpen}>\n              {open ? (\n                <CloseIcon color=\"primary\" />\n              ) : (\n                <EmojiEmotionsIcon color=\"primary\" />\n              )}\n            </IconButton>\n          </div>\n        </Grid>\n        {rightContent && (\n          <Grid item xs={4} sm={3} lg={2}>\n            {rightContent}\n          </Grid>\n        )}\n      </Grid>\n      {maxCharacters && (\n        <FormHelperText error={characters >= maxCharacters}>\n          {`${characters}/${maxCharacters} characters`}\n        </FormHelperText>\n      )}\n      <Collapse in={open}>\n        <Box mt={1}>\n          <Picker\n            set={emojiSet}\n            color={theme.palette.primary.main}\n            style={{ width: \"100%\" }}\n            onSelect={onSelectEmoji}\n            emojisToShowFilter={emojisToShowFilter}\n          />\n        </Box>\n      </Collapse>\n    </Fragment>\n  );\n}\n\nEmojiTextarea.propTypes = {\n  theme: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired,\n  emojiSet: PropTypes.string.isRequired,\n  rightContent: PropTypes.element,\n  placeholder: PropTypes.string,\n  maxCharacters: PropTypes.number,\n  onChange: PropTypes.func,\n  inputClassName: PropTypes.string\n};\n\nexport default withStyles(styles, { withTheme: true })(EmojiTextarea);\n","/* eslint-disable */\n\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nconst argsTag = \"[object Arguments]\";\n\nconst funcTag = \"[object Function]\";\n\nconst genTag = \"[object GeneratorFunction]\";\n\nconst mapTag = \"[object Map]\";\n\nconst objectTag = \"[object Object]\";\n\nconst promiseTag = \"[object Promise]\";\n\nconst setTag = \"[object Set]\";\n\nconst stringTag = \"[object String]\";\n\nconst weakMapTag = \"[object WeakMap]\";\n\nconst dataViewTag = \"[object DataView]\";\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nconst reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nconst reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nconst reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to compose unicode character classes. */\nconst rsAstralRange = \"\\\\ud800-\\\\udfff\";\n\nconst rsComboMarksRange = \"\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23\";\n\nconst rsComboSymbolsRange = \"\\\\u20d0-\\\\u20f0\";\n\nconst rsVarRange = \"\\\\ufe0e\\\\ufe0f\";\n\n/** Used to compose unicode capture groups. */\nconst rsAstral = `[${rsAstralRange}]`;\n\nconst rsCombo = `[${rsComboMarksRange}${rsComboSymbolsRange}]`;\n\nconst rsFitz = \"\\\\ud83c[\\\\udffb-\\\\udfff]\";\n\nconst rsModifier = `(?:${rsCombo}|${rsFitz})`;\n\nconst rsNonAstral = `[^${rsAstralRange}]`;\n\nconst rsRegional = \"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\";\n\nconst rsSurrPair = \"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\";\n\nconst rsZWJ = \"\\\\u200d\";\n\n/** Used to compose unicode regexes. */\nconst reOptMod = `${rsModifier}?`;\n\nconst rsOptVar = `[${rsVarRange}]?`;\n\nconst rsOptJoin = `(?:${rsZWJ}(?:${[rsNonAstral, rsRegional, rsSurrPair].join(\n  \"|\"\n)})${rsOptVar}${reOptMod})*`;\n\nconst rsSeq = rsOptVar + reOptMod + rsOptJoin;\n\nconst rsSymbol = `(?:${[\n  `${rsNonAstral + rsCombo}?`,\n  rsCombo,\n  rsRegional,\n  rsSurrPair,\n  rsAstral\n].join(\"|\")})`;\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nconst reUnicode = RegExp(`${rsFitz}(?=${rsFitz})|${rsSymbol}${rsSeq}`, \"g\");\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nconst reHasUnicode = RegExp(\n  `[${rsZWJ}${rsAstralRange}${rsComboMarksRange}${rsComboSymbolsRange}${rsVarRange}]`\n);\n\n/** Detect free variable `global` from Node.js. */\nconst freeGlobal =\n  typeof global === \"object\" && global && global.Object === Object && global;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || Function(\"return this\")();\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  let index = -1;\n\n  const length = array ? array.length : 0;\n\n  const result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split(\"\");\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  let index = -1;\n\n  const result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, key => object[key]);\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  let result = false;\n  if (value !== null && typeof value.toString !== \"function\") {\n    try {\n      result = !!`${value}`;\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `iterator` to an array.\n *\n * @private\n * @param {Object} iterator The iterator to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction iteratorToArray(iterator) {\n  let data;\n\n  const result = [];\n\n  while (!(data = iterator.next()).done) {\n    result.push(data.value);\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  let index = -1;\n\n  const result = Array(map.size);\n\n  map.forEach((value, key) => {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  let index = -1;\n\n  const result = Array(set.size);\n\n  set.forEach(value => {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);\n}\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\n/** Used for built-in method references. */\nconst funcProto = Function.prototype;\n\nconst objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nconst coreJsData = root[\"__core-js_shared__\"];\n\n/** Used to detect methods masquerading as native. */\nconst maskSrcKey = (function() {\n  const uid = /[^.]+$/.exec(\n    (coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO) || \"\"\n  );\n  return uid ? `Symbol(src)_1.${uid}` : \"\";\n})();\n\n/** Used to resolve the decompiled source of functions. */\nconst funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nconst hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nconst objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nconst reIsNative = RegExp(\n  `^${funcToString\n    .call(hasOwnProperty)\n    .replace(reRegExpChar, \"\\\\$&\")\n    .replace(\n      /hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\n      \"$1.*?\"\n    )}$`\n);\n\n/** Built-in value references. */\nconst Symbol = root.Symbol;\n\nconst iteratorSymbol = Symbol ? Symbol.iterator : undefined;\n\nconst propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nconst nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nconst DataView = getNative(root, \"DataView\");\n\nconst Map = getNative(root, \"Map\");\n\nconst Promise = getNative(root, \"Promise\");\n\nconst Set = getNative(root, \"Set\");\n\nconst WeakMap = getNative(root, \"WeakMap\");\n\n/** Used to detect maps, sets, and weakmaps. */\nconst dataViewCtorString = toSource(DataView);\n\nconst mapCtorString = toSource(Map);\n\nconst promiseCtorString = toSource(Promise);\n\nconst setCtorString = toSource(Set);\n\nconst weakMapCtorString = toSource(WeakMap);\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  const result =\n    isArray(value) || isArguments(value) ? baseTimes(value.length, String) : [];\n\n  const length = result.length;\n\n  const skipIndexes = !!length;\n\n  for (const key in value) {\n    if (\n      (inherited || hasOwnProperty.call(value, key)) &&\n      !(skipIndexes && (key === \"length\" || isIndex(key, length)))\n    ) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  const pattern =\n    isFunction(value) || isHostObject(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  const result = [];\n  for (const key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key !== \"constructor\") {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  let index = -1;\n\n  const length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  const value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nlet getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif (\n  (DataView && getTag(new DataView(new ArrayBuffer(1))) !== dataViewTag) ||\n  (Map && getTag(new Map()) !== mapTag) ||\n  (Promise && getTag(Promise.resolve()) !== promiseTag) ||\n  (Set && getTag(new Set()) !== setTag) ||\n  (WeakMap && getTag(new WeakMap()) !== weakMapTag)\n) {\n  getTag = function(value) {\n    const result = objectToString.call(value);\n\n    const Ctor = result === objectTag ? value.constructor : undefined;\n\n    const ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n        case mapCtorString:\n          return mapTag;\n        case promiseCtorString:\n          return promiseTag;\n        case setCtorString:\n          return setTag;\n        case weakMapCtorString:\n          return weakMapTag;\n        default:\n          return;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return (\n    !!length &&\n    (typeof value === \"number\" || reIsUint.test(value)) &&\n    (value > -1 && value % 1 === 0 && value < length)\n  );\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  const Ctor = value && value.constructor;\n\n  const proto = (typeof Ctor === \"function\" && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func !== null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return `${func}`;\n    } catch (e) {}\n  }\n  return \"\";\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return (\n    isArrayLikeObject(value) &&\n    hasOwnProperty.call(value, \"callee\") &&\n    (!propertyIsEnumerable.call(value, \"callee\") ||\n      objectToString.call(value) === argsTag)\n  );\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  const tag = isObject(value) ? objectToString.call(value) : \"\";\n  return tag === funcTag || tag === genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return (\n    typeof value === \"number\" &&\n    value > -1 &&\n    value % 1 === 0 &&\n    value <= MAX_SAFE_INTEGER\n  );\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  const type = typeof value;\n  return !!value && (type === \"object\" || type === \"function\");\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value === \"object\";\n}\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return (\n    typeof value === \"string\" ||\n    (!isArray(value) &&\n      isObjectLike(value) &&\n      objectToString.call(value) === stringTag)\n  );\n}\n\n/**\n * Converts `value` to an array.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Array} Returns the converted array.\n * @example\n *\n * _.toArray({ 'a': 1, 'b': 2 });\n * // => [1, 2]\n *\n * _.toArray('abc');\n * // => ['a', 'b', 'c']\n *\n * _.toArray(1);\n * // => []\n *\n * _.toArray(null);\n * // => []\n */\nfunction toArray(value) {\n  if (!value) {\n    return [];\n  }\n  if (isArrayLike(value)) {\n    return isString(value) ? stringToArray(value) : copyArray(value);\n  }\n  if (iteratorSymbol && value[iteratorSymbol]) {\n    return iteratorToArray(value[iteratorSymbol]());\n  }\n  const tag = getTag(value);\n\n  const func =\n    tag === mapTag ? mapToArray : tag === setTag ? setToArray : values;\n\n  return func(value);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object ? baseValues(object, keys(object)) : [];\n}\n\nmodule.exports = toArray;\n"],"sourceRoot":""}